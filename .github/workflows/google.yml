# Nombre del flujo de trabajo
name: Build and Deploy to Google Cloud Run

# Desencadenar automáticamente el flujo de trabajo
on:
  # Activador del flujo de trabajo
  push:
    branches:
      - "main"
    
# Varibles 
env:
  PROJECT_ID: openmarket-demo # TODO: update Google Cloud project id
  GAR_LOCATION: europe-southwest1
  SERVICE: srv-usuario-pg-cloud  
  SERVICE_ACCOUNT: servicios-generales@openmarket-demo.iam.gserviceaccount.com
  REGION: europe-southwest1 
  REPOSITORY: usuario-repo-pg-cloud
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_PROJECT_KEY: userdemo-git-pg-cloud  

# Trabajos que se ejecutan en el flujo de trabajo
# Trabajos que se ejecutan en el flujo de trabajo
jobs:
  ci:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    
    # Configura el job para que se ejecute en la versión más reciente de un ejecutor Ubuntu Linux. 
    runs-on: ubuntu-latest
    # Agrupa todos los pasos que se ejecutan en el trabajo
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          
      - name: Create Repository
        continue-on-error: true
        run: |-
         gcloud artifacts repositories create ${{ env.REPOSITORY }} --repository-format=docker --location=${{ env.REGION }} --description="Repositorio servicio usuario pg"

      # Configurar la autenticación en los repositorios de Docker en la región      
      - name: Docker Auth
        run: |-       
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin europe-southwest1-docker.pkg.dev
          #   gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet
          
      - name: Build Container
        run: |-
         docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
      
      - name: Push Container
        run: |-      
         docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      
      #SonarQube
      - name: Tests
        run: |-         
         mvn sonar:sonar  -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}  -Dsonar.host.url=${{ env.SONAR_HOST_URL }}  -Dsonar.login=${{ env.SONAR_TOKEN }}
          
  cd:
    needs: ci
     # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    
    steps:
       - name: Google Auth
         id: auth
         uses: 'google-github-actions/auth@v0'
         with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

       - name: Deploy
         run: |-
          gcloud run deploy ${{ env.SERVICE }} --image="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" --project=${{ env.PROJECT_ID }} --port=8080 --region=${{ env.REGION }} --allow-unauthenticated --max-instances=29
